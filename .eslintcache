[{"/Users/Melissa/Desktop/Coding/Fullstack/voting-bot/src/index.js":"1","/Users/Melissa/Desktop/Coding/Fullstack/voting-bot/src/reportWebVitals.js":"2","/Users/Melissa/Desktop/Coding/Fullstack/voting-bot/src/Components/App.js":"3","/Users/Melissa/Desktop/Coding/Fullstack/voting-bot/src/Components/RepInfo.js":"4","/Users/Melissa/Desktop/Coding/Fullstack/voting-bot/src/Components/Welcome.js":"5","/Users/Melissa/Desktop/Coding/Fullstack/voting-bot/src/Components/Watson.js":"6","/Users/Melissa/Desktop/Coding/Fullstack/voting-bot/src/secrets.js":"7","/Users/Melissa/Desktop/Coding/Fullstack/voting-bot/src/Components/Navbar.js":"8","/Users/Melissa/Desktop/Coding/Fullstack/voting-bot/src/store/repInfo.js":"9","/Users/Melissa/Desktop/Coding/Fullstack/voting-bot/src/store/index.js":"10","/Users/Melissa/Desktop/Coding/Fullstack/voting-bot/src/Components/FindMyReps.js":"11","/Users/Melissa/Desktop/Coding/Fullstack/voting-bot/src/Components/RepForm.js":"12","/Users/Melissa/Desktop/Coding/Fullstack/voting-bot/src/Components/VotingRecords.js":"13","/Users/Melissa/Desktop/Coding/Fullstack/voting-bot/src/Components/RecordForm.js":"14","/Users/Melissa/Desktop/Coding/Fullstack/voting-bot/src/store/members.js":"15","/Users/Melissa/Desktop/Coding/Fullstack/voting-bot/src/store/records.js":"16","/Users/Melissa/Desktop/Coding/Fullstack/voting-bot/src/Components/RecordInfo.js":"17"},{"size":720,"mtime":1611349241825,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1608756668648,"results":"20","hashOfConfig":"19"},{"size":857,"mtime":1611440173367,"results":"21","hashOfConfig":"19"},{"size":3207,"mtime":1611440505668,"results":"22","hashOfConfig":"19"},{"size":699,"mtime":1611435909415,"results":"23","hashOfConfig":"19"},{"size":916,"mtime":1611440420401,"results":"24","hashOfConfig":"19"},{"size":143,"mtime":1611438669598,"results":"25","hashOfConfig":"19"},{"size":423,"mtime":1611440350779,"results":"26","hashOfConfig":"19"},{"size":790,"mtime":1611446919268,"results":"27","hashOfConfig":"19"},{"size":567,"mtime":1611520078451,"results":"28","hashOfConfig":"19"},{"size":685,"mtime":1611352180779,"results":"29","hashOfConfig":"19"},{"size":3032,"mtime":1611440919480,"results":"30","hashOfConfig":"19"},{"size":1312,"mtime":1611524129490,"results":"31","hashOfConfig":"19"},{"size":2757,"mtime":1611524646745,"results":"32","hashOfConfig":"19"},{"size":784,"mtime":1611519278142,"results":"33","hashOfConfig":"19"},{"size":798,"mtime":1611520581076,"results":"34","hashOfConfig":"19"},{"size":1547,"mtime":1611523869394,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"13vlvw7",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Melissa/Desktop/Coding/Fullstack/voting-bot/src/index.js",[],["72","73"],"/Users/Melissa/Desktop/Coding/Fullstack/voting-bot/src/reportWebVitals.js",[],"/Users/Melissa/Desktop/Coding/Fullstack/voting-bot/src/Components/App.js",[],"/Users/Melissa/Desktop/Coding/Fullstack/voting-bot/src/Components/RepInfo.js",["74"],"import {\n  Table,\n  TableBody,\n  TableRow,\n  TableHead,\n  TableCell,\n} from \"@material-ui/core\";\n\nimport { connect } from \"react-redux\";\nimport \"react-tabulator/lib/styles.css\";\nimport { ReactTabulator } from \"react-tabulator\";\n\nconst RepInfo = (props) => {\n  const repInfo = props.repInfo;\n  const offices = repInfo.offices;\n  const officials = repInfo.officials;\n\n  return (\n    <div>\n      <div>\n        <p>Here are your representatives:</p>\n\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Image</TableCell>\n              <TableCell>Name</TableCell>\n              <TableCell>Office</TableCell>\n              <TableCell>Email</TableCell>\n              <TableCell>Twitter</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {officials.map((official, index) => {\n              let office = offices.find((office) => {\n                return office.officialIndices.includes(index);\n              });\n              let twitter;\n              official.channels\n                ? (twitter = official.channels.find((channel) => {\n                    return channel.type === \"Twitter\";\n                  }))\n                : (twitter = undefined);\n\n              return (\n                <TableRow key={index}>\n                  <TableCell>\n                    {official.photoUrl ? (\n                      <img\n                        className=\"rep-img\"\n                        src={official.photoUrl}\n                        alt={`${official.name}`}\n                      />\n                    ) : (\n                      \"No Image Available\"\n                    )}\n                  </TableCell>\n                  <TableCell>{official.name}</TableCell>\n                  <TableCell>{office.name}</TableCell>\n                  <TableCell>\n                    {official.emails ? (\n                      <a href={`mailto: ${official.emails[0]}`}>\n                        <img\n                          id=\"email\"\n                          src=\"https://i.pinimg.com/originals/8f/c3/7b/8fc37b74b608a622588fbaa361485f32.png\"\n                          alt=\"email logo\"\n                        />\n                        {official.emails[0]}\n                      </a>\n                    ) : (\n                      \"No Email Available\"\n                    )}\n                  </TableCell>\n                  <TableCell>\n                    {twitter ? (\n                      <a href={`https://twitter.com/${twitter.id}`}>\n                        <img\n                          id=\"twitter\"\n                          src=\"https://www.logolynx.com/images/logolynx/43/430c07f27af3fda19373042528edbe3d.jpeg\"\n                          alt=\"twitter logo\"\n                        />\n                        {twitter.id}\n                      </a>\n                    ) : (\n                      \"No Twitter Found\"\n                    )}\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>{\" \"}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    repInfo: state.repInfo,\n  };\n};\n\nexport default connect(mapStateToProps)(RepInfo);\n","/Users/Melissa/Desktop/Coding/Fullstack/voting-bot/src/Components/Welcome.js",[],"/Users/Melissa/Desktop/Coding/Fullstack/voting-bot/src/Components/Watson.js",[],"/Users/Melissa/Desktop/Coding/Fullstack/voting-bot/src/secrets.js",[],"/Users/Melissa/Desktop/Coding/Fullstack/voting-bot/src/Components/Navbar.js",[],"/Users/Melissa/Desktop/Coding/Fullstack/voting-bot/src/store/repInfo.js",[],"/Users/Melissa/Desktop/Coding/Fullstack/voting-bot/src/store/index.js",[],"/Users/Melissa/Desktop/Coding/Fullstack/voting-bot/src/Components/FindMyReps.js",[],"/Users/Melissa/Desktop/Coding/Fullstack/voting-bot/src/Components/RepForm.js",[],"/Users/Melissa/Desktop/Coding/Fullstack/voting-bot/src/Components/VotingRecords.js",[],"/Users/Melissa/Desktop/Coding/Fullstack/voting-bot/src/Components/RecordForm.js",[],"/Users/Melissa/Desktop/Coding/Fullstack/voting-bot/src/store/members.js",[],"/Users/Melissa/Desktop/Coding/Fullstack/voting-bot/src/store/records.js",[],"/Users/Melissa/Desktop/Coding/Fullstack/voting-bot/src/Components/RecordInfo.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":11,"column":10,"nodeType":"81","messageId":"82","endLine":11,"endColumn":24},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'ReactTabulator' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]